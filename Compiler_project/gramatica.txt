S -> parser

parser -> lex yacc

lex -> lexStats lexDefs

lexStats -> lexStats lexStat
lexStats -> lexStat
lexStat -> LIT '=' simbols 
lexStat -> TOK '=' '[' tokens ']'
lexStat -> IGNORE '=' VALUE
simbols -> simbols simbol
simbols -> simbol 
tokens -> tokens ',' token
tokens -> token

lexDefs -> lexDefs lexDef 
lexDefs -> lexDef
lexDef -> REGEX RETURN TORETURN 
lexDef -> ERROR

yacc -> precedence yaccGram yaccFim 
precedence -> PRECEDENCE
precedence -> 
yaccGram -> yaccGram yaccStat
yaccGram -> yaccStat
yaccStat -> NOME GRAM FUNC
yaccStat -> ERROR
yaccFim -> SAMEASPLY
