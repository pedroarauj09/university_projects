Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Dir
Rule 1     Dir -> ( texto Conteudo )
Rule 2     Dir -> Ficheiro
Rule 3     Conteudo -> Conteudo Dir
Rule 4     Conteudo -> <empty>
Rule 5     Ficheiro -> [ texto texto ]

Terminals, with rules where they appear

(                    : 1
)                    : 1
[                    : 5
]                    : 5
error                : 
texto                : 1 5 5

Nonterminals, with rules where they appear

Conteudo             : 1 3
Dir                  : 3 0
Ficheiro             : 2

Parsing method: LALR

state 0

    (0) S' -> . Dir
    (1) Dir -> . ( texto Conteudo )
    (2) Dir -> . Ficheiro
    (5) Ficheiro -> . [ texto texto ]

    (               shift and go to state 2
    [               shift and go to state 4

    Dir                            shift and go to state 1
    Ficheiro                       shift and go to state 3

state 1

    (0) S' -> Dir .



state 2

    (1) Dir -> ( . texto Conteudo )

    texto           shift and go to state 5


state 3

    (2) Dir -> Ficheiro .

    $end            reduce using rule 2 (Dir -> Ficheiro .)
    )               reduce using rule 2 (Dir -> Ficheiro .)
    (               reduce using rule 2 (Dir -> Ficheiro .)
    [               reduce using rule 2 (Dir -> Ficheiro .)


state 4

    (5) Ficheiro -> [ . texto texto ]

    texto           shift and go to state 6


state 5

    (1) Dir -> ( texto . Conteudo )
    (3) Conteudo -> . Conteudo Dir
    (4) Conteudo -> .

    )               reduce using rule 4 (Conteudo -> .)
    (               reduce using rule 4 (Conteudo -> .)
    [               reduce using rule 4 (Conteudo -> .)

    Conteudo                       shift and go to state 7

state 6

    (5) Ficheiro -> [ texto . texto ]

    texto           shift and go to state 8


state 7

    (1) Dir -> ( texto Conteudo . )
    (3) Conteudo -> Conteudo . Dir
    (1) Dir -> . ( texto Conteudo )
    (2) Dir -> . Ficheiro
    (5) Ficheiro -> . [ texto texto ]

    )               shift and go to state 9
    (               shift and go to state 2
    [               shift and go to state 4

    Dir                            shift and go to state 10
    Ficheiro                       shift and go to state 3

state 8

    (5) Ficheiro -> [ texto texto . ]

    ]               shift and go to state 11


state 9

    (1) Dir -> ( texto Conteudo ) .

    $end            reduce using rule 1 (Dir -> ( texto Conteudo ) .)
    )               reduce using rule 1 (Dir -> ( texto Conteudo ) .)
    (               reduce using rule 1 (Dir -> ( texto Conteudo ) .)
    [               reduce using rule 1 (Dir -> ( texto Conteudo ) .)


state 10

    (3) Conteudo -> Conteudo Dir .

    )               reduce using rule 3 (Conteudo -> Conteudo Dir .)
    (               reduce using rule 3 (Conteudo -> Conteudo Dir .)
    [               reduce using rule 3 (Conteudo -> Conteudo Dir .)


state 11

    (5) Ficheiro -> [ texto texto ] .

    $end            reduce using rule 5 (Ficheiro -> [ texto texto ] .)
    )               reduce using rule 5 (Ficheiro -> [ texto texto ] .)
    (               reduce using rule 5 (Ficheiro -> [ texto texto ] .)
    [               reduce using rule 5 (Ficheiro -> [ texto texto ] .)

